[tool.poetry]
name = "prodstats"
version = "0.1.0"
description = "Well and Production Statistics"
authors = ["Brock Friedrich <brocklfriedrich@gmail.com>"]

[tool.poetry.dependencies]
python = "^3.8.1"
sentry-sdk = "^0.13.5"
tomlkit = "^0.5.8"
datadog = "^0.33.0"
gunicorn = "^20.0.4"
json-log-formatter = "^0.2.0"
setproctitle = "^1.1.10"
pyyaml = "^5.2"
attrs = "^19.3.0"
tenacity = "^6.0.0"
sqlalchemy = "^1.3.13"
psycopg2-binary = "^2.8.4"
alembic = "^1.4.0"
gino = "^0.8.5"
sqlalchemy-utils = "^0.36.1"
asyncpg = "^0.20.1"
httpx = "^0.11.1"
typer = {version = "^0.0.8", extras = ["all"]}
geoalchemy2 = "^0.6.3"
dateparser = "^0.7.2"
orjson = "^2.5.0"
fastapi = "^0.49.0"
aiofiles = "^0.4.0"
python-multipart = "^0.0.5"
itsdangerous = "^1.1.0"
uvicorn = "^0.11.3"
async-exit-stack = "^1.0.1"
async-generator = "^1.10"
pydantic = "^1.4"
email-validator = "^1.0.5"
pyparsing = "^2.4.6"
logutils = "^0.3.5"
pandas = "^1.0.1"
pycurl = "7.43.0.1"
celery = {version = "4.4.0", extras = ["sqs", "redis"]}
celery-redbeat = "^0.13.0"
geopandas = "^0.7.0"
geojson = "^2.5.0"

[tool.poetry.scripts]
prodstats = "prodstats.manage:main"
seed_db = "scripts.seed_db:run"

[tool.poetry.dev-dependencies]
black = {version = "^19.10b0", allow-prereleases = true}
mypy = "^0.761"
flake8 = "^3.7.9"
ipython = "^7.11.1"
pytest = "^5.3.2"
pytest-cov = "^2.8.1"
boto3 = "^1.10.46"
requests-mock = "^1.7.0"
codecov = "^2.0.15"
pytest-postgresql = "^2.2.1"
pytest-asyncio = "^0.10.0"
async-asgi-testclient = "^1.4.3"
matplotlib = "^3.2.1"
seaborn = "^0.10.0"

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "nocover",
    "if self.debug",
    "raise AssertionError",
    "raise NotImplementedError",
    "logger.debug",
    "if 0:",
    "if __name__ == .__main__.:",
]

[tool.isort]
multi_line_output=3
include_trailing_comma=true
force_grid_wrap=0
use_parentheses=true
line_length=88
known_third_party = ["alembic", "async_asgi_testclient", "async_generator", "asyncpg", "boto3", "celery", "dateutil", "dotenv", "fastapi", "geoalchemy2", "geopandas", "gino", "httpx", "json_log_formatter", "logutils", "numpy", "orjson", "pandas", "prodstats", "psutil", "pydantic", "pytest", "pytz", "requests_mock", "shapely", "sqlalchemy", "sqlalchemy_utils", "starlette", "tests", "tomlkit", "typer", "uvicorn", "uvloop", "yaml"]

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"
